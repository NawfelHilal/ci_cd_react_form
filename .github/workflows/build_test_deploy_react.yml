name: Build, Test and Deploy React Application

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci, build and test
        run: |
          cd react-form
          npm ci
          npm run build --if-present
          npm test
      - name: npm jsdoc
        run: |
          cd react-form
          npm ci
          npm run jsdoc
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          directory: react-form/coverage
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: build and publish package on NPM üì¶
        run: |
          cd react-form
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          git config --global user.email "nawfelhilal13@gmail.com"
          git config --global user.name "Nawfel Hilal"

          # R√©cup√©rer la version actuelle
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"

          # Toujours incr√©menter la version
          npm version patch
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "New version: $NEW_VERSION"

          # Construire le package
          npm run build-npm-ci

          # Publier la nouvelle version
          npm publish --access public

          # Pousser les changements de version vers GitHub
          git add package.json package-lock.json
          git commit -m "Bump version to $NEW_VERSION [skip ci]"
          git push https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git HEAD:main
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire repository
          path: react-form/build
          if-no-files-found: error

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest

    permissions:
      pages: write
      id-token: write

    needs: build_test

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
